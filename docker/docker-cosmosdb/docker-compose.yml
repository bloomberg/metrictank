version: '2'

services:
  metrictank:
    hostname: metrictank
    image: grafana/metrictank
    ports:
     - "6060:6060"
     - "2003:2003"
    volumes:
      - ../../build/metrictank:/usr/bin/metrictank
      - ../../scripts/config/metrictank-docker-dev.ini:/etc/metrictank/metrictank.ini
      - ./storage-schemas.conf:/etc/metrictank/storage-schemas.conf
      - ./storage-aggregation.conf:/etc/metrictank/storage-aggregation.conf
    environment:
     WAIT_HOSTS: kafka:9092
     WAIT_TIMEOUT: 60
     MT_STATS_ADDR: graphite:2003
     MT_CASSANDRA_ADDRS: <addr>
     MT_CASSANDRA_TIMEOUT: 30s
     MT_CASSANDRA_SSL: "true"
     MT_CASSANDRA_CA_PATH: ""
     MT_CASSANDRA_HOST_VERIFICATION: "false"
     MT_CASSANDRA_DISABLE_INITIAL_HOST_LOOKUP: "true"
     MT_CASSANDRA_AUTH: "true"
     MT_CASSANDRA_USERNAME: <user>
     MT_CASSANDRA_PASSWORD: <pass>
     MT_CASSANDRA_IDX_HOSTS: <addr>
     MT_CASSANDRA_IDX_TIMEOUT: "30s"
     MT_CASSANDRA_IDX_DISABLE_INITIAL_HOST_LOOKUP: "true"
     MT_CASSANDRA_IDX_NUM_CONNS: 1
     MT_CASSANDRA_IDX_SSL: "true"
     MT_CASSANDRA_IDX_CA_PATH: ""
     MT_CASSANDRA_IDX_HOST_VERIFICATION: "false"
     MT_CASSANDRA_IDX_AUTH: "true"
     MT_CASSANDRA_IDX_USERNAME: <user>
     MT_CASSANDRA_IDX_PASSWORD: <pass>
    links:
     - kafka
     - jaeger

  kafka:
    hostname: kafka
    image: raintank/kafka
    environment:
      ADVERTISED_HOST: kafka
      NUM_PARTITIONS: 8
    ports:
      - "2181:2181"
      - "9092:9092"
      - "9999:9999"
    volumes:
      - /tmp/kafka-logs

  graphite:
    hostname: graphite
    image: graphiteapp/graphite-statsd
    ports:
     - "8080:80"

  grafana:
    hostname: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    links:
     - jaeger

  tsdb-gw:
    hostname: tsdb-gw
    image: raintank/tsdb-gw
    ports:
      - "8081:80"
    environment:
      GW_GRAPHITE_URL: http://metrictank:6060
      GW_METRICS_PUBLISH: "true"
      GW_METRICS_KAFKA_COMP: snappy
      GW_KAFKA_TCP_ADDR: kafka:9092
      GW_STATS_ENABLED: "true"
      GW_STATS_PREFIX: "tsdb-gw.stats.dev.tsdbgw_tsdb-gw_1"
      GW_STATS_ADDR: "graphite:2003"

  mt-gateway:
    hostname: mt-gateway
    image: grafana/mt-gateway
    ports:
      - "6059:6059"
    environment:
      MT_GRAPHITE_URL: http://metrictank:6060
      MT_METRICS_PUBLISH: "true"
      MT_METRICS_KAFKA_COMP: snappy
      MT_KAFKA_TCP_ADDR: kafka:9092
      MT_STATS_ENABLED: "true"
      MT_STATS_PREFIX: "mt-gateway.stats.dev.mt-gateway-gw_1"
      MT_STATS_ADDR: "graphite:2003"

  jaeger:
    hostname: jaeger
    image:  jaegertracing/all-in-one
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  prometheus:
    image: prom/prometheus:v2.2.1
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
     - "9090:9090"
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.15.2
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor:v0.28.3
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    labels:
      org.label-schema.group: "monitoring"
